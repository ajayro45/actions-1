name: Azure Keyvault Secrets

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target keyvaultt"
        required: true
        type: choice
        options:
          - aa1302keyvault

permissions: 
  id-token: write
  contents: read

jobs:
    Azure_Secrets_Push:
        runs-on: ubuntu-latest
        steps:          
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Azure Login
              uses: azure/login@v2
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Azure CLI script
              uses: azure/cli@v2
              with:
                azcliversion: latest
                inlineScript: |
                  az account show
            - name: Write bulk JSON to file
              run: |
                echo '${{ secrets.BULK_SECRETS_JSON }}' > secrets.json

            - name: Upload secrets to Key Vault
              run: |
                echo "Uploading secrets to Key Vault..."
                KEYVAULT="${{ secrets.OUR_KV }}"
        
                for key in $(jq -r 'keys[]' secrets.json); do
                  value=$(jq -r --arg k "$key" '.[$k]' secrets.json)
                  echo "üîê Uploading secret: $key"
                  az keyvault secret set \
                    --vault-name "$KEYVAULT" \
                    --name "$key" \
                    --value "$value" \
                    --output none
                done
        
            - name: Success
              run: echo "‚úÖ All secrets uploaded to Key Vault successfully."                  
            #  - name: Fetch secrets from Azure Key Vault
            #   id: fetch-secrets
            #   uses: manojwalker/azvault-action@v1.0.16
            #   with:
            #     vault-name:  ${{ secrets.OUR_KV}}
            #   env:
            #     AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
            #     CLIENTSECRET: ${{ secrets.CLIENTSECRET }}
            #     AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
            # - name: Use fetched secrets
            #   run: |
            #     echo "Secret 1: ${{ steps.fetch-secrets.outputs.secret1 }}"
            #     echo "Secret 2: ${{ steps.fetch-secrets.outputs.secret2 }}"
            #     # Add more secrets as needed